@model ReflectionIT.Mvc.Paging.PagingList<NorthwindCustomers.Models.OrderDetails>
@using ReflectionIT.Mvc.Paging
@addTagHelper *, ReflectionIT.Mvc.Paging

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.UnitPrice)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Quantity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Discount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Order)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Product)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.UnitPrice)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Quantity)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Discount)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Order.OrderId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Product.ProductName)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.OrderId, productId = item.ProductId }) |
                    @Html.ActionLink("Details", "Details", new { id = item.OrderId }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.OrderId, productId = item.ProductId })
                </td>
            </tr>
        }
    </tbody>
</table>
<br>
<nav aria-label="Navigation">
    @await this.Component.InvokeAsync("Pager", new { pagingList = this.Model })
</nav>
